09.05.2016
Started
Начал разработку класса CFsmCreator для создания таблиц переходов и выходов поискового автомата.

11,12.05.2016
Transition table creation code (only prints), dumping method
Доделал построение таблиц переходов автомата (они выводятся на экран, но не сохраняются).
Таблица выходов не строится, но выводятся звёздочки, по которым можно определить количество
найденных шаблонов.
Добавлены методы для получения определённого бита двоичной последовательности и вывода описания
состояний.
-
Testing code in main.cpp
Добавил тестирующий код в main.cpp.

19.05.2016
Refactoring: optional pattern mask, output fix
Сделал удобные функции для доступа к битам шаблонов и масок - теперь маску можно не задавать, если
все биты шаблона существенны.
Изменил вывод состояний: для перфиксов вообще без ошибок теперь нуль не пишется.
-
Renamed FSM/ to SearchFSM/
Переименовал папку с проектом в SearchFSM.
-
Structure for FSM tables
Создал структуры для таблиц автомата.
Каждая ячейка таблицы будет иметь номер следующего состояния для перехода и список найденных
шаблонов для выхода автомата.
Информация о найденном шаблоне содержит его номер, количество ошибок и отступ от текущей позиции
автомата (равную длине шаблона).

23.05.2016
FSM tables storing, print output
Сохранение таблиц при их генерации, запоминание выхода вместе с новым состоянием.
Вывод на экран выхода автомата при соответствующем переходе.

24.05.2016
Methods for accessing created table
Добавил в класс CFsmCreator методы GetStatesCount и GetTableRow для доступа к построенной таблице.

06.06.2016
Came to the natural bit order, comments on it
Сделал для шаблонов естественный порядок битов: первый бит в старшем разряде байта, если последний
байт неполный, то его значащими являются младшие биты (соответствующее количество).
Написал подробный комментарий об этом перед определением структуры SPattern.

08.06.2016
Translated README into Russian
Добавил языковые ссылки и перевёл скудное пока описание (README.md) на русский язык.

11.06.2016
Created CSearchFsm template class for searching FSMs themselves
Написал шаблонный класс CSearchFsm для реализации функциональности самого поискового автомата.
Параметрами шаблона являются типы индексов состояний и выходов - для больших возможностей сделать
таблицы компактнее при небольшом количестве состояний или выходов.
Структуры таблиц самого поискового автомата отличаются от структур в классе создания таблиц.
В тестовом клиенте (main.cpp) частично реализовал переработку таблиц класса-создателя в таблицы
поискового автомата - пока без таблиц выхода.

13.06.2016
fsm-test: Began creating CFsmTest - class for testing FSMs
Начал создавать класс для тестирования автоматов CFsmTest.
Пока сделал обёртку для таблиц автомата, содержащую указатели на таблицы и сами таблицы в членах
типа QVector<>.
Таблицы выходов пока не трогал.
-
fsm-test: CFsmTest traces FSM running
В класс CFsmTest добавлен член CFsmTest::TestFsm, который подаёт на вход автомата случайные биты и
выводит на экран последовательность состояний.
Перед запуском автомата на экран выводятся тестовые шаблоны (в main.cpp).
Далее планируется добавить вывод выходов автомата.
-
Plans in todo.txt
Создал файл todo.txt с планами дальнейшей работы.
-
fsm-test: Merged master

30.12.2016
fsm-test: output table, refactoring
Добавил в тестирующий класс автомата сохранение таблицы выходов и её использование при тестовом
прогоне автомата.
Добавил typedef для нескольких типов.
